Project Darkstar Server Distribution
Version ${sgs.version}

INTRODUCTION

Project Darkstar lets developers write scalable, reliable, persistent
and fault-tolerant game server applications using simple
single-threaded, event-driven code.

This distribution of the Project Darkstar Server contains everything you
need to develop game servers that run as applications in the Project
Darkstar Server environment.  Information about building client
applications is available as separate downloads.

In addition to the documents, APIs and examples, this distribution
contains a complete single-system version of the Project Darkstar
Server.

See the CHANGELOG file for a summary of recent changes, and the RELEASE
COMPATIBILITY section below for information about compatibility.

CONTENTS

This distribution contains the following subdirectories:

- doc
  Documentation for the server API

- lib
  JAR files needed to develop for the Project Darkstar Server, and to
  run server applications

- tutorial
  Documentation and sample code for the server tutorial
	
SUPPORTED PLATFORMS

This distribution has been tested on the following operating systems and
processors:

- Solaris(TM) 10 Operating System on SPARC processors and AMD 64-bit
  processors
- Windows XP SP2 on 32-bit processors
- Redhat Linux EL4 on 32-bit processors
- Mac OS X 10.5 on Intel processors

This distribution requires Java(TM) Platform, Standard Edition 6 (Java
SE platform 6), or greater.

It has been tested with version 1.6.0_07 of Java SE platform 6 on
Solaris, Windows, and Linux platforms, and version 1.6.0_05 on Mac OS X
platforms.

REQUIRED LIBRARIES

The Project Darkstar server depends on several additional libraries,
which must be installed.

This distribution requires Berkeley DB version ${bdb.version}, which may be
bundled with this distribution, or else can be obtained and compiled
from:

  http://www.oracle.com/database/berkeley-db/db/index.html

The db.jar and the subdirectories containing the native libraries for
the platforms of interest should be copied to the lib/bdb subdirectory.
If using files compiled separately, the Berkeley DB JAR file should be
copied to the lib/bdb subdirectory, and the natives libraries for the
current platform should be copied to proper subdirectory as specified in
the startup scripts.

This distribution supports Berkeley DB Java edition version
${bdb.je.version}, which can be obtained from:

  http://www.oracle.com/database/berkeley-db/je/index.html

The je-${bdb.je.version}.jar JAR file should be copied to the lib
subdirectory.  The JAR file is only needed when the system is configured
to run with Berkeley DB Java edition.

DEVELOPING AND RUNNING

To develop server applications, include the following JAR file in your
classpath:

   lib/sgs-server.jar

To run the Project Darkstar server:

1. Change to the directory containing the installation, or set the
   SGSHOME environment variable to the installation directory and
   include that directory in your path

2. On Windows, type:

   sgs <path to application classes> <path to application config file>

   On all other systems, type:

   sgs.sh <path to application classes> <path to application config file>

   For example, to run the tutorial's HelloWorld example when running on
   Windows, assuming the SGSHOME environment variable is set to the
   installation directory, that directory is included in your path, and
   your working directory is the tutorial subdirectory of the
   installation directory, type:

   sgs tutorial.jar HelloWorld.properties


RELEASE COMPATIBILITY

Release 0.9.7:

- Running an application using release 0.9.7 with persistent data
  created using release 0.9.6 will automatically upgrade the data to the
  current release format, which is incompatible with earlier releases.

- The following configuration properties were changed incompatibly:

  com.sun.sgs.impl.kernel.profile.level
  com.sun.sgs.impl.kernel.profile.listeners

Release 0.9.6:

- See the API-CHANGES file for a detailed list of changes to the API in
  this release.

- Does not support persistent data from earlier releases.


KNOWN ISSUES

This version of the Project Darkstar Server has the following
limitations:

- Multi-node operation is currently not scalable.  Depending on the
  application, adding additional application nodes to a multi-node
  cluster may reduce performance, not improve it.  We expect this
  behavior to improve in future releases.

- This release supports only limited I/O throttling, so it is possible
  for clients to overwhelm the server with network traffic and cause the
  server to run out of memory.  As a temporary workaround, developers
  must ensure that clients do not send network traffic faster than the
  server application can process it.

- It does not support pluggable I/O transports.

- The API for customizing managers and services is incomplete and still
  under development.

- The transaction coordinator implementation does not support more than
  one persistent service at a time.  This restriction prevents using
  additional services that modify the contents of databases.


MORE INFORMATION

For more information, please see the tutorial in the tutorial directory
and the documentation in the doc directory.  Also check the
http://www.projectdarkstar.com website, which has links to more
information and to the Project Darkstar forums.

If you cannot find an answer to your question in any of these places,
please email the Darkstar team at:

   ProjectDarkstar@games.dev.java.net
